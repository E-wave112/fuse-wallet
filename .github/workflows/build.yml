name: build

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 17.x, 18.x]

    steps:
      - name: Create envfile
        run: |
          touch .env
          echo DEBUG: false >> .env
          echo SECRET_KEY: ${{ secrets.SECRET_KEY }} >> .env
          echo NODE_ENV: ${{ secrets.NODE_ENV }} >> .env
          echo DB_URI: ${{ secrets.DB_URI }} >> .env
          echo WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }} >> .env
          echo WEBHOOK_HASH: ${{ secrets.WEBHOOK_HASH }} >> .env
          echo PORT: ${{ secrets.PORT }} >> .env
          echo API_BASE_URL: ${{ secrets.API_BASE_URL }} >> .env
          echo EXPIRES_IN: ${{ secrets.EXPIRES_IN }} >> .env
          echo TEMPLATE_RESET_PIN: ${{ secrets.TEMPLATE_RESET_PIN }} >> .env
          echo TEMPLATE_VERIFY_ACCOUNT: ${{ secrets.TEMPLATE_VERIFY_ACCOUNT }} >> .env
          echo TEMPLATE_TRANSFER_ID: ${{ secrets.TEMPLATE_TRANSFER_ID }} >> .env
          echo TEMPLATE_RECEIVED_ID: ${{ secrets.TEMPLATE_RECEIVED_ID }} >> .env
          echo SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }} >> .env
          echo FLW_SECRET_KEY: ${{ secrets.FLW_SECRET_KEY }} >> .env
          echo FLW_PUBLIC_KEY: ${{ secrets.FLW_PUBLIC_KEY }} >> .env
          echo FLW_ENCRYPTION_KEY: ${{ secrets.FLW_ENCRYPTION_KEY }} >> .env
          cat .env
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run the tests
        run: npm run test:cov
      - name: Get Code Coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
